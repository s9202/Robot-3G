Dioda 1: 	zielona po otrzymaniu odpowiedzi z serwera
			bia�a gdy nie otrzyma odpowiedzi serwera
			
Dioda 2:	zielona gdy otrzyma JSON z serwera (ma�o istotne)

Dioda 3:	czerwona gdy robot zgas�
			zielona gdy robot �wieci

Arduino otrzymuje Stringi inforumuj�ce co ma zrobi�:

przodON
przodOFF
lewoON
lewoOFF
tylON
tylOFF
prawoON
prawoOFF

Serwer wysy�a znak do Arduino okre�laj�cy co mazrobi� z diod�:  (tymczasowe)

0 - wy��cz diod�
1 - za�wie� diod�

Arduino wysy�a Stringi przez JSON do serwera a ten do klienta

DIODA SWIECI 						- zapala diod� 3 na zielono
dioda JSON	 						- gasi diode na bialo (tylko przy uruchomieniu strony
DIODA GASNIE lub ka�dy innyString 	- zapala diode 3 na czerwono


aJSON boblioteka dla Arduino: (raczej zb�dne)
http://interactive-matter.eu/blog/2010/08/14/ajson-handle-json-with-arduino/

przygotowanie Arduino i Rapsberry Pi:
http://alexandre.alapetite.fr/doc-alex/raspberrypi-nodejs-arduino/index.en.html
https://github.com/voodootikigod/node-serialport

GITHUB Repozytoria:

github.com/s9202/Robot-Wifi/
github.com/s8145/Robot-3G/

Komunikacja Arduino - Raspberry Pi
znaki sygna��w:
'0' - tryb manualny (robot czeka na polecenia)
'1' - tryb automatyczny (robot samodzielnie dzia�a, przerwa� mo�na tylko zmian� trybu)
'w' - ruch do przodu
'a' - ruch w lewo
's' - ruch do ty�u
'd' - ruch w prawo
'W' - ruch skok do przodu - guziki interfejsu
'A' - ruch skok w lewo - guziki interfejsu
'S' - ruch skok do ty�u - guziki interfejsu
'D' - ruch skok w prawo - guziki interfejsu
'q' - obr�t g�owy w lewo
'e' - obr�t g�owy w prawo
'3' - zatrzymanie ka�dego ruchu k�
'4' - zatrzymanie ka�dego ruchu g�owy

znaki tablicy mapy:
'o' - puste pole
'x' - zaj�te pole (�ciana)
'8' - miejsce robota przodem do g�ry
'6' - miejsce robota przodem w prawo
'4' - miejsce robota przodem w lewo
'2' - miejsce robota przodem w d�


ZASADY PISANIA KODU:
- trzymamy się zasad niezależnie od środowiska w którym piszemy
- kodujemy utf-8
- wcięcia robimy tabulacjami, a nie spacjami
- każda funkcja, klasa, struktura, stała musi posiadać powyżej komentarz opisujący działanie, parametry i zwracaną wartość
- każde wyrażenie obejmujemy klamrami { }, nawet if który ma jedną instrukcję if(){}
- nazwy klas, struktur rozpoczynamy wielką literą
- nazwy stałych piszemy WIELKIMI_LITERAMI
- nazwy zmiennych i funkcji piszemy wStyluCamelCase, pamiętając że rozpoczyna się małą literą
- wszystkie nazwy piszemy w języku polskim, nie używamy języka angielskiego
- unikamy zmiennych globalnych
- każdą zmienną przekazujemy do funkcji w parametrze
